---
- name: define ocp_project
  set_fact:
    ocp_project: dm7-qlb-{{guid}}

    #Â Templates come from here: https://raw.githubusercontent.com/jorgemoralespou/ose-sample-apps-layouts

- name: Create project for rhdm7 quick loan bank demo
  shell: |
         oc new-project {{ocp_project}} \
         --display-name="RHDM7 Quick Loan Bank Demo" \
         --description="Red Hat Decision Manager 7 Quick Loan Bank Demo"
  ignore_errors: true

- name: Set project limit LimitRange
  shell: "oc create -f /tmp/{{guid}}//limit-range.yaml -n {{ocp_project}}"

- name: Import ImageStreams
  shell: "oc create -f https://raw.githubusercontent.com/jboss-container-images/rhdm-7-openshift-image/rhdm70/rhdm70-image-streams.yaml -n {{ocp_project}}"

- name: "Import templates"
  shell: "oc create -f https://raw.githubusercontent.com/jboss-container-images/rhdm-7-openshift-image/rhdm70/templates/rhdm70-full.yaml -n {{ocp_project}}"

- name: "Create decision-central secret and service account"
  shell: "oc create -f https://raw.githubusercontent.com/jboss-container-images/rhdm-7-openshift-image/rhdm70/decisioncentral-app-secret.yaml -n {{ocp_project}}"

- name: "Create KIE-Server secret and service account"
  shell: "oc create -f https://raw.githubusercontent.com/jboss-container-images/rhdm-7-openshift-image/rhdm70/kieserver-app-secret.yaml -n {{ocp_project}}"

- name: "Deploy KIE-Server with CORS support."
  shell: "oc process -f /tmp/{{guid}}/rhdm70-kieserver-cors.yaml -p DOCKERFILE_REPOSITORY=\"http://www.github.com/jbossdemocentral/rhdm7-qlb-loan-demo\" -p DOCKERFILE_REF=master -p DOCKERFILE_CONTEXT=support/openshift/rhdm70-kieserver-cors -n {{ocp_project}} | oc create -n {{ocp_project}} -f -"

#####

- name: "Create the Decision Manager application."
  shell: "oc new-app --template=rhdm70-full-persistent -p APPLICATION_NAME={{application_name}} -p IMAGE_STREAM_NAMESPACE={{ocp_project}} -p KIE_ADMIN_USER={{kie_admin_user}} -p KIE_ADMIN_PWD={{kie_admin_pwd}} -p KIE_SERVER_CONTROLLER_USER={{kie_server_controller_user}} -p KIE_SERVER_CONTROLLER_PWD={{kie_server_controller_pwd}} -p KIE_SERVER_USER={{kie_server_user}} -p KIE_SERVER_PWD={{kie_server_pwd}} -p MAVEN_REPO_USERNAME={{kie_admin_user}} -p MAVEN_REPO_PASSWORD={{kie_admin_pwd}} -p DECISION_CENTRAL_VOLUME_CAPACITY={{pv_capacity}} -n {{ocp_project}}"

- name: "Patch the KIE-Server deployment to use CORS"
  shell: "oc patch dc/rhdm7-qlb-kieserver --type='json' -p=\"[{'op': 'replace', 'path': '/spec/triggers/0/imageChangeParams/from/name', 'value': 'rhdm70-kieserver-cors:latest'}]\""

- name: "Create the QLB client application"
  shell: "oc new-app nodejs:6~https://github.com/jbossdemocentral/rhdm7-qlb-loan-demo#development --name=qlb-client-application --context-dir=support/application-ui -e NODE_ENV=development --build-env NODE_ENV=development"

#- name: "Expose FSI Backoffice Entando"
#  shell: "oc expose svc fsi-backoffice --name=entando-fsi-backoffice --path=/fsi-backoffice/ -n {{ocp_project}}"
#
- name: "Get KIE Server Route"
  shell: "oc get route rhdm7-qlb-kieserver | awk 'FNR > 1 {print $2}'"
  register: oc_get_route_output

- name: "Set KIE-Server Route fact"
  set_fact:
    kie_server_route: "{{ oc_get_route_output.stdout }}"

- name: "Configure config file kie-server route"
  shell: "sed \"s/.*kieserver_host.*/\ \ \ \ \'kieserver_host\'\ :\ \'{{kie_server_route}}\',/g\" /tmp/{{guid}}/config.js.orig > /tmp/{{guid}}/config.js"

- name: "Create config-map"
  shell: "oc create configmap qlb-client-application-config-map --from-file=/tmp/{{guid}}/config.js"

- name: "Attach ConfigMap"
  shell: "oc patch dc/qlb-client-application -p '{\"spec\":{\"template\":{\"spec\":{\"volumes\":[{\"name\": \"volume-qlb-client-app-1\", \"configMap\": {\"name\": \"qlb-client-application-config-map\", \"defaultMode\": 420}}]}}}}'"

- name: "Mount Volume from ConfigMap"
  shell: "oc patch dc/qlb-client-application -p '{\"spec\":{\"template\":{\"spec\":{\"containers\":[{\"name\": \"qlb-client-application\", \"volumeMounts\":[{\"name\": \"volume-qlb-client-app-1\",\"mountPath\":\"/opt/app-root/src/config\"}]}]}}}}'"


#- name: "Create FSI BPM process application"
#  shell: |
#          oc process \
#          -f "/tmp/{{guid}}/client-onboarding-process.yaml" \
#          -p GIT_URI="https://github.com/entando/fsi-onboarding-bpm" \
#          -p GIT_REF="master" \
#          -p ENTANDO_BASE_URL="http://{{fsi_customer_route}}/fsi-customer/" \
#          -n {{ocp_project}} | oc create -f - -n {{ocp_project}}

#- name: "Patch the ImageSteam location"
#  shell: |
#          oc patch bc/co --type="json" \
#          -p="[{'op': 'replace', 'path': '/spec/strategy/sourceStrategy/from/namespace', 'value': '{{ocp_project}}'}]"

#- name: "Start build of BPM Process application"
#  shell: "oc start-build co"

- name: Annotate the completed project as requested by user
  shell: "oc annotate namespace {{ocp_project}} openshift.io/requester={{ocp_username}} --overwrite"

- name: Give user access to the completed project
  shell: "oc policy add-role-to-user admin {{ocp_username}} -n {{ocp_project}}"

#- name: workload Tasks Complete
#  debug:
#    msg: workload Tasks Complete
